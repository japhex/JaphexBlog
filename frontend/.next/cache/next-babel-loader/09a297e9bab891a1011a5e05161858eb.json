{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/J/Documents/Websites/JaphexBlog/frontend/components/utils/query.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst QueryType = ({\n  children,\n  query,\n  id\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(query, {\n    variables: {\n      id: _parseInt(id)\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Error: \", _JSON$stringify(error));\n  return children({\n    data\n  });\n};\n\nexport default QueryType;","map":{"version":3,"sources":["/Users/J/Documents/Websites/JaphexBlog/frontend/components/utils/query.js"],"names":["React","useQuery","QueryType","children","query","id","data","loading","error","variables"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAA6B;AAC9C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACG,KAAD,EAAQ;AAChDK,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAE,UAASA,EAAT;AAAN;AADqC,GAAR,CAAzC;AAIA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAW,gBAAeA,KAAf,CAAX,CAAP;AACX,SAAOL,QAAQ,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAf;AACA,CARD;;AAUA,eAAeJ,SAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nconst QueryType = ({ children, query, id }) => {\n\tconst { data, loading, error } = useQuery(query, {\n\t\tvariables: { id: parseInt(id) }\n\t})\n\n\tif (loading) return <p>Loading...</p>\n\tif (error) return <p>Error: {JSON.stringify(error)}</p>\n\treturn children({ data })\n}\n\nexport default QueryType"]},"metadata":{},"sourceType":"module"}